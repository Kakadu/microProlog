call_fresh (fun x -> (=/=) x !(A x)) st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((=/=) x y)
                 (conj ((===) x ![!0; z; !1]) ((===) y ![!0; !1; !1])))))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((=/=) x y)
                 (conj ((===) x ![!0; z; !1])
                    (conj ((===) y ![!0; !1; !1])
                       (conj ((===) z !1) ((===) ![x; y] q)))))))
  st, all answers {
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((=/=) x y)
                 (conj ((===) x ![!0; z; !1])
                    (conj ((===) y ![!0; !1; !1]) ((===) z !0))))))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((===) z !0)
                 (conj ((=/=) x y)
                    (conj ((===) x ![!0; z; !1]) ((===) y ![!0; !1; !1]))))))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((===) x ![!0; z; !1])
                 (conj ((===) y ![!0; !1; !1]) ((=/=) x y)))))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((===) z !1)
                 (conj ((=/=) x y)
                    (conj ((===) x ![!0; z; !1]) ((===) y ![!0; !1; !1]))))))
  st, all answers {
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          call_fresh
            (fun z ->
               conj ((===) z !1)
                 (conj ((===) x ![!0; z; !1])
                    (conj ((===) y ![!0; !1; !1]) ((=/=) x y))))))
  st, all answers {
}
call_fresh
  (fun x -> call_fresh (fun y -> conj ((=/=) ![x; !1] ![!2; y]) ((===) x !2)))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x -> call_fresh (fun y -> conj ((=/=) ![x; !1] ![!2; y]) ((===) y !1)))
  st, all answers {
q=_.10; 
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) ![x; !1] ![!2; y]) (conj ((===) x !2) ((===) y !1))))
  st, all answers {
}
call_fresh
  (fun x ->
     call_fresh (fun y -> conj ((=/=) ![x; !1] ![!2; y]) ((===) ![x; y] q)))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 2][_.12 =/= 1]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) ![x; !1] ![!2; y])
            (conj ((===) x !2) ((===) ![x; y] q))))
  st, all answers {
q=[2; _.12] ([_.12 =/= 1]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) ![x; !1] ![!2; y])
            (conj ((===) x !2) (conj ((===) y !9) ((===) ![x; y] q)))))
  st, all answers {
q=[2; 9]; 
}
call_fresh
  (fun a ->
     call_fresh
       (fun d ->
          conj ((===) ![a; d] q)
            (conj ((=/=) q ![!5; !6]) (conj ((===) a !5) ((===) d !6)))))
  st, all answers {
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) ![x; !1] ![!2; y])
            (conj ((===) x !2) (conj ((===) y !1) ((===) ![x; y] q)))))
  st, all answers {
}
call_fresh
  (fun a ->
     call_fresh
       (fun x ->
          call_fresh
            (fun z ->
               conj ((=/=) a ![x; !1])
                 (conj ((===) a ![z; !1]) ((===) x z)))))
  st, all answers {
}
call_fresh
  (fun a ->
     call_fresh
       (fun x ->
          call_fresh
            (fun z ->
               conj ((=/=) a ![x; !1])
                 (conj ((===) a ![z; !1])
                    (conj ((===) x !5) ((===) ![x; z] q))))))
  st, all answers {
q=[5; _.13] ([_.13 =/= 5]);
}
(=/=) !3 !4 st, all answers {
q=_.10; 
}
(=/=) !3 !3 st, all answers {
}
(&&&) ((&&&) ((=/=) !5 q) ((=/=) !6 q)) ((===) q !5) st, all answers {
}
call_fresh
  (fun a ->
     call_fresh
       (fun d ->
          conj ((===) ![a; d] q) (conj ((=/=) q ![!5; !6]) ((===) a !5))))
  st, all answers {
q=[5; _.12] ([_.12 =/= 6]);
}
call_fresh (fun a -> conj ((===) !3 a) ((=/=) a !4)) st, all answers {
q=_.10; 
}
(&&&) ((=/=) !4 q) ((=/=) !3 q) st, all answers {
q=_.10 ([_.10 =/= 3; _.10 =/= 4]);
}
(&&&) ((=/=) q !5) ((=/=) q !5) st, all answers {
q=_.10 ([_.10 =/= 5]);
}
(let foo x = call_fresh (fun a -> (=/=) x a) in call_fresh (fun a -> foo a))
  st, all answers {
q=_.10; 
}
call_fresh (fun x -> call_fresh (fun y -> conj ((===) ![x; y] q) ((=/=) x y)))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= _.12]);
}
call_fresh
  (fun a -> call_fresh (fun d -> conj ((===) ![a; d] q) ((=/=) q ![!5; !6])))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5][_.12 =/= 6]);
}
call_fresh
  (fun a ->
     call_fresh
       (fun d ->
          conj ((===) ![a; d] q) (conj ((=/=) q ![!5; !6]) ((===) a !3))))
  st, all answers {
q=[3; _.12]; 
}
call_fresh (fun x -> call_fresh (fun y -> conj ((===) ![x; y] q) ((=/=) y x)))
  st, all answers {
q=[_.11; _.12] ([_.12 =/= _.11]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y -> conj ((===) ![x; y] q) (conj ((=/=) x y) ((=/=) y x))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= _.12]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y -> conj ((===) ![x; y] q) (conj ((=/=) x y) ((=/=) x y))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= _.12]);
}
(&&&) ((=/=) q !5) ((=/=) !5 q) st, all answers {
q=_.10 ([_.10 =/= 5]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((===) ![x; y] q)
            (conj ((=/=) ![x; y] ![!5; !6]) ((=/=) x !5))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((===) ![x; y] q)
            (conj ((=/=) x !5) ((=/=) ![x; y] ![!5; !6]))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) x !5)
            (conj ((=/=) ![x; y] ![!5; !6]) ((===) ![x; y] q))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) !5 x)
            (conj ((=/=) ![x; y] ![!5; !6]) ((===) ![x; y] q))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5]);
}
call_fresh
  (fun x ->
     call_fresh
       (fun y ->
          conj ((=/=) !5 x)
            (conj ((=/=) ![y; x] ![!6; !5]) ((===) ![x; y] q))))
  st, all answers {
q=[_.11; _.12] ([_.11 =/= 5]);
}
call_fresh
  (fun y -> call_fresh (fun z -> conj ((=/=) x ![y; !2]) ((===) x ![z; !2])))
  st, all answers {
x=[_.12; 2] ([_.12 =/= _.11]);
}
distincto ((%) !2 ((%<) !3 q)) st, all answers {
q=_.23 ([_.23 =/= 3; _.23 =/= 2]);
}
rembero !1 ((%) !1 ((%) !2 ((%<) !1 !3))) q st, all answers {
q=[1; 2; 1; 3]; 
q=[2; 1; 3]; 
q=[1; 2; 3]; 
q=[2; 3]; 
}
rembero !1 ((%) !1 ((%<) !2 !3)) ((%) !1 ((%<) !2 !3)) st, all answers {
q=_.10; 
}
rembero !1 ((%) !1 ((%) !2 ((%<) !1 !3))) q st, all answers {
q=[2; 3]; 
}
rembero !1 ((%) !1 ((%<) !2 !3)) ((%) !1 ((%<) !2 !3)) st, all answers {
}
